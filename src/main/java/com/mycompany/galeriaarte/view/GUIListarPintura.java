/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.galeriaarte.view;

import com.mycompany.galeriaarte.model.CertificadoAutenticidad;
import com.mycompany.galeriaarte.model.Pintura;
import com.mycompany.galeriaarte.service.IObservadorObraArte;
import com.mycompany.galeriaarte.service.IServicioObraArte;
import com.mycompany.galeriaarte.service.ServicioObraArte;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SANTIAGO
 */
public class GUIListarPintura extends javax.swing.JFrame implements IObservadorObraArte {

    private IServicioObraArte servicioObraArte;

    /**
     * Creates new form GUIAgregarObraArte
     */
    public GUIListarPintura(IServicioObraArte ServicioObraArte) {
        this.servicioObraArte = ServicioObraArte;
        initComponents();
        setLocationRelativeTo(null);
        if (ServicioObraArte instanceof ServicioObraArte s) {
            s.addObservador((IObservadorObraArte) this);
            listar();
        }

    }

    private void listar() {

        List<Pintura> pinturas = servicioObraArte.listarPinturas();
        DefaultTableModel model = (DefaultTableModel) tblPinturas.getModel();
        model.setRowCount(0);
        for (Pintura p : pinturas) {

            CertificadoAutenticidad c = p.getCertificado();
            String num = (c != null) ? c.getNumeroCertificado() : "N/A";
            String ent = (c != null) ? c.getEntidadEmisora() : "N/A";
            String fecha = (c != null) ? String.valueOf(c.getFechaEmision()) : "N/A";
            model.addRow(new Object[]{
                p.getIdObra(),
                p.getTitulo(),
                p.getAutor(),
                p.getAnioCreacion() != null ? p.getAnioCreacion().toString() : "",
                p.getPrecio(),
                p.getEstado(),
                p.getTecnica(),
                p.getDimensiones(),
                num, ent, fecha
            });
        }

        if (pinturas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay pinturas para mostrar.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPinturas = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        btnListarPinturas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listar Pinturas");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listar Pinturas");

        tblPinturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdObra", "Titulo", "Autor", "AÃ±o de CreaciÃ³n", "Precio", "Estado", "TÃ©cnica", "Dimensiones", "NÂ° Certificado", "Entidad", "EmisiÃ³n"
            }
        ));
        jScrollPane1.setViewportView(tblPinturas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnListarPinturas.setText("Listar Pinturas");
        btnListarPinturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarPinturasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnListarPinturas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(btnListarPinturas))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnListarPinturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarPinturasActionPerformed
        listar();

    }//GEN-LAST:event_btnListarPinturasActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListarPinturas;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPinturas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizarDatos() {
        listar();
    }

    @Override
    public void dispose() {
        if (servicioObraArte instanceof ServicioObraArte s) {
            s.removeObservador(this); // ðŸ‘ˆ se desregistra del observer
        }
        super.dispose(); // ðŸ‘ˆ sigue cerrando la ventana normalmente
    }

}
